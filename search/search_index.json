{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"M\u00e1quinas virtuales y Contenedores.","text":""},{"location":"index.html#que-es-la-virtualizacion","title":"\u00bfQu\u00e9 es la virtualizaci\u00f3n?","text":"<p>Permite reservar una serie de recursos del sistema (RAM, CPU, DISCO) para emular un sistema operativo (guest  / invitado) dentro de otro (host / anfitri\u00f3n).</p> <p>Ventajas:</p> <ul> <li>Podemos aprovechar mejor el hardware de la m\u00e1quina anfitriona, ya que estamos ejecutando varios \"ordenadores\" en uno mismo, aprovechando recursos que de otra forma es posible que no se llegaran a usar.</li> <li>Permite ejecutar software que quiz\u00e1 sea incompatible con tu sistema operativo anfitri\u00f3n, ya sea por un motivo de versiones o porque son sistemas operativos diferentes (Windows, Linux, MAC).</li> </ul>"},{"location":"index.html#que-es-un-hipervisor","title":"\u00bfQu\u00e9 es un Hipervisor?","text":"<p>El hipervisor es la parte software que permite crear y gestionar las m\u00e1quinas virtuales (asignar recursos, crear los discos virtuales, etc). </p> <p>Se distinguen dos tipos:</p> <p>Hipervisores de tipo 1 (hipervisores bare metal):</p> <ul> <li> <p>No necesitan de un sistema operativo anfitri\u00f3n para comunicarse con los componentes del ordenador, por tanto la comunicaci\u00f3n entre las m\u00e1quinas virtuales y los componentes es m\u00e1s directa, r\u00e1pida y eficiente. Es decir, si una m\u00e1quina virtual necesita hacer una operaci\u00f3n, se comunicar\u00e1 con el hipervisor y \u00e9ste con la CPU. </p> </li> <li> <p>Ejemplos: VMWare ESXi, KVM, Hyper-V</p> </li> </ul> <p>Hipervisores de tipo 2 (hipervisores alojados):</p> <ul> <li> <p>Son una aplicaci\u00f3n m\u00e1s del sistema operativo instalado en la m\u00e1quina y el hipervisor accede al hardware de la m\u00e1quina a trav\u00e9s de ese sistema operativo. Por tanto, si una m\u00e1quina virtual requiere hacer una operaci\u00f3n, pasar\u00e1 la orden al hipervisor, \u00e9ste al sistema operativo y de ah\u00ed a la CPU.</p> </li> <li> <p>Ejemplos: VirtualBox y VMWare Workstation.</p> </li> </ul>"},{"location":"index.html#que-es-un-contenedor","title":"\u00bfQu\u00e9 es un Contenedor?","text":"<ul> <li>Los contenedores, a diferencia de las m\u00e1quinas virtuales, comparten el kernel, archivos binarios y librer\u00edas del sistema operativo (anfitri\u00f3n).<ul> <li>Por tanto un host Linux podr\u00e1 crear contenedores relacionados con Linux, y un host Windows podr\u00e1 crear contenedores Windows.</li> </ul> </li> </ul> <p>NOTA</p> <ul> <li>Windows tiene la posibilidad de ejecutar contenedores Linux a trav\u00e9s del aislamiento de Hyper-V (WSL). </li> <li>B\u00e1sicamente activas un Kernel Linux en Windows y por tanto en Windows s\u00ed puedes generar contenedores de Linux.  </li> </ul> <ul> <li> <p>Cada contenedor ocupa mucho menos espacio, puesto que se ahorra todo los ficheros del sistema del sistema operativo que ahora recoge de la m\u00e1quina anfitriona.</p> </li> <li> <p>Su objetivo no es simular un sistema operativo completo, sino un servicio/aplicaci\u00f3n en concreto, por tanto aqu\u00ed tambi\u00e9n se produce un ahorro de espacio en disco.</p> <ul> <li>Aunque un \u00fanico contenedor puede emular varios servicios/aplicaciones es habitual tener varios contenedores y cada uno que tenga \u00fanicamente corriendo 1 servicio/aplicaci\u00f3n y las dependencias que se necesitan para que \u00e9ste funcione.</li> </ul> </li> <li> <p>Arranca mucho m\u00e1s r\u00e1pido que una m\u00e1quina virtual, pues utiliza los procesos y ficheros del sistema del anfitri\u00f3n, el cual ya se encuentra arrancado.</p> </li> <li> <p>Docker es integrable con servicios en la nube:</p> <ul> <li>AWS (Amazon Web Service).</li> <li>Azure (Microsoft).</li> <li>Google Cloud.</li> </ul> </li> <li> <p>Docker es un software que permite la creaci\u00f3n y gesti\u00f3n de contenedores. </p> </li> </ul>"}]}